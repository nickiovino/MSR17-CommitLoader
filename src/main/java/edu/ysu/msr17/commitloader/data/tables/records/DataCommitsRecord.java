/**
 * This class is generated by jOOQ
 */
package edu.ysu.msr17.commitloader.data.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.4" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DataCommitsRecord extends org.jooq.impl.UpdatableRecordImpl<edu.ysu.msr17.commitloader.data.tables.records.DataCommitsRecord> implements org.jooq.Record15<org.jooq.types.ULong, java.lang.String, java.lang.String, java.lang.String, org.jooq.types.UInteger, java.sql.Timestamp, org.jooq.types.UInteger, java.sql.Timestamp, java.lang.Byte, java.lang.String, org.jooq.types.UInteger, org.jooq.types.UInteger, java.lang.Byte, java.lang.Byte, java.lang.Byte> {

	private static final long serialVersionUID = 204111473;

	/**
	 * Setter for <code>travistorrent.data_commits.id</code>.
	 */
	public DataCommitsRecord setId(org.jooq.types.ULong value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>travistorrent.data_commits.id</code>.
	 */
	public org.jooq.types.ULong getId() {
		return (org.jooq.types.ULong) getValue(0);
	}

	/**
	 * Setter for <code>travistorrent.data_commits.repo</code>.
	 */
	public DataCommitsRecord setRepo(java.lang.String value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>travistorrent.data_commits.repo</code>.
	 */
	public java.lang.String getRepo() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>travistorrent.data_commits.sha</code>.
	 */
	public DataCommitsRecord setSha(java.lang.String value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>travistorrent.data_commits.sha</code>.
	 */
	public java.lang.String getSha() {
		return (java.lang.String) getValue(2);
	}

	/**
	 * Setter for <code>travistorrent.data_commits.message</code>.
	 */
	public DataCommitsRecord setMessage(java.lang.String value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>travistorrent.data_commits.message</code>.
	 */
	public java.lang.String getMessage() {
		return (java.lang.String) getValue(3);
	}

	/**
	 * Setter for <code>travistorrent.data_commits.author</code>.
	 */
	public DataCommitsRecord setAuthor(org.jooq.types.UInteger value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>travistorrent.data_commits.author</code>.
	 */
	public org.jooq.types.UInteger getAuthor() {
		return (org.jooq.types.UInteger) getValue(4);
	}

	/**
	 * Setter for <code>travistorrent.data_commits.author_date</code>.
	 */
	public DataCommitsRecord setAuthorDate(java.sql.Timestamp value) {
		setValue(5, value);
		return this;
	}

	/**
	 * Getter for <code>travistorrent.data_commits.author_date</code>.
	 */
	public java.sql.Timestamp getAuthorDate() {
		return (java.sql.Timestamp) getValue(5);
	}

	/**
	 * Setter for <code>travistorrent.data_commits.committer</code>.
	 */
	public DataCommitsRecord setCommitter(org.jooq.types.UInteger value) {
		setValue(6, value);
		return this;
	}

	/**
	 * Getter for <code>travistorrent.data_commits.committer</code>.
	 */
	public org.jooq.types.UInteger getCommitter() {
		return (org.jooq.types.UInteger) getValue(6);
	}

	/**
	 * Setter for <code>travistorrent.data_commits.commit_date</code>.
	 */
	public DataCommitsRecord setCommitDate(java.sql.Timestamp value) {
		setValue(7, value);
		return this;
	}

	/**
	 * Getter for <code>travistorrent.data_commits.commit_date</code>.
	 */
	public java.sql.Timestamp getCommitDate() {
		return (java.sql.Timestamp) getValue(7);
	}

	/**
	 * Setter for <code>travistorrent.data_commits.verified</code>.
	 */
	public DataCommitsRecord setVerified(java.lang.Byte value) {
		setValue(8, value);
		return this;
	}

	/**
	 * Getter for <code>travistorrent.data_commits.verified</code>.
	 */
	public java.lang.Byte getVerified() {
		return (java.lang.Byte) getValue(8);
	}

	/**
	 * Setter for <code>travistorrent.data_commits.verified_reason</code>.
	 */
	public DataCommitsRecord setVerifiedReason(java.lang.String value) {
		setValue(9, value);
		return this;
	}

	/**
	 * Getter for <code>travistorrent.data_commits.verified_reason</code>.
	 */
	public java.lang.String getVerifiedReason() {
		return (java.lang.String) getValue(9);
	}

	/**
	 * Setter for <code>travistorrent.data_commits.added</code>.
	 */
	public DataCommitsRecord setAdded(org.jooq.types.UInteger value) {
		setValue(10, value);
		return this;
	}

	/**
	 * Getter for <code>travistorrent.data_commits.added</code>.
	 */
	public org.jooq.types.UInteger getAdded() {
		return (org.jooq.types.UInteger) getValue(10);
	}

	/**
	 * Setter for <code>travistorrent.data_commits.removed</code>.
	 */
	public DataCommitsRecord setRemoved(org.jooq.types.UInteger value) {
		setValue(11, value);
		return this;
	}

	/**
	 * Getter for <code>travistorrent.data_commits.removed</code>.
	 */
	public org.jooq.types.UInteger getRemoved() {
		return (org.jooq.types.UInteger) getValue(11);
	}

	/**
	 * Setter for <code>travistorrent.data_commits.ss_gen_positive</code>.
	 */
	public DataCommitsRecord setSsGenPositive(java.lang.Byte value) {
		setValue(12, value);
		return this;
	}

	/**
	 * Getter for <code>travistorrent.data_commits.ss_gen_positive</code>.
	 */
	public java.lang.Byte getSsGenPositive() {
		return (java.lang.Byte) getValue(12);
	}

	/**
	 * Setter for <code>travistorrent.data_commits.ss_gen_negative</code>.
	 */
	public DataCommitsRecord setSsGenNegative(java.lang.Byte value) {
		setValue(13, value);
		return this;
	}

	/**
	 * Getter for <code>travistorrent.data_commits.ss_gen_negative</code>.
	 */
	public java.lang.Byte getSsGenNegative() {
		return (java.lang.Byte) getValue(13);
	}

	/**
	 * Setter for <code>travistorrent.data_commits.ss_gen_neutral</code>.
	 */
	public DataCommitsRecord setSsGenNeutral(java.lang.Byte value) {
		setValue(14, value);
		return this;
	}

	/**
	 * Getter for <code>travistorrent.data_commits.ss_gen_neutral</code>.
	 */
	public java.lang.Byte getSsGenNeutral() {
		return (java.lang.Byte) getValue(14);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<org.jooq.types.ULong> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record15 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row15<org.jooq.types.ULong, java.lang.String, java.lang.String, java.lang.String, org.jooq.types.UInteger, java.sql.Timestamp, org.jooq.types.UInteger, java.sql.Timestamp, java.lang.Byte, java.lang.String, org.jooq.types.UInteger, org.jooq.types.UInteger, java.lang.Byte, java.lang.Byte, java.lang.Byte> fieldsRow() {
		return (org.jooq.Row15) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row15<org.jooq.types.ULong, java.lang.String, java.lang.String, java.lang.String, org.jooq.types.UInteger, java.sql.Timestamp, org.jooq.types.UInteger, java.sql.Timestamp, java.lang.Byte, java.lang.String, org.jooq.types.UInteger, org.jooq.types.UInteger, java.lang.Byte, java.lang.Byte, java.lang.Byte> valuesRow() {
		return (org.jooq.Row15) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<org.jooq.types.ULong> field1() {
		return edu.ysu.msr17.commitloader.data.tables.DataCommits.DATA_COMMITS.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return edu.ysu.msr17.commitloader.data.tables.DataCommits.DATA_COMMITS.REPO;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field3() {
		return edu.ysu.msr17.commitloader.data.tables.DataCommits.DATA_COMMITS.SHA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field4() {
		return edu.ysu.msr17.commitloader.data.tables.DataCommits.DATA_COMMITS.MESSAGE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<org.jooq.types.UInteger> field5() {
		return edu.ysu.msr17.commitloader.data.tables.DataCommits.DATA_COMMITS.AUTHOR;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field6() {
		return edu.ysu.msr17.commitloader.data.tables.DataCommits.DATA_COMMITS.AUTHOR_DATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<org.jooq.types.UInteger> field7() {
		return edu.ysu.msr17.commitloader.data.tables.DataCommits.DATA_COMMITS.COMMITTER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field8() {
		return edu.ysu.msr17.commitloader.data.tables.DataCommits.DATA_COMMITS.COMMIT_DATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Byte> field9() {
		return edu.ysu.msr17.commitloader.data.tables.DataCommits.DATA_COMMITS.VERIFIED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field10() {
		return edu.ysu.msr17.commitloader.data.tables.DataCommits.DATA_COMMITS.VERIFIED_REASON;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<org.jooq.types.UInteger> field11() {
		return edu.ysu.msr17.commitloader.data.tables.DataCommits.DATA_COMMITS.ADDED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<org.jooq.types.UInteger> field12() {
		return edu.ysu.msr17.commitloader.data.tables.DataCommits.DATA_COMMITS.REMOVED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Byte> field13() {
		return edu.ysu.msr17.commitloader.data.tables.DataCommits.DATA_COMMITS.SS_GEN_POSITIVE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Byte> field14() {
		return edu.ysu.msr17.commitloader.data.tables.DataCommits.DATA_COMMITS.SS_GEN_NEGATIVE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Byte> field15() {
		return edu.ysu.msr17.commitloader.data.tables.DataCommits.DATA_COMMITS.SS_GEN_NEUTRAL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.types.ULong value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getRepo();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value3() {
		return getSha();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value4() {
		return getMessage();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.types.UInteger value5() {
		return getAuthor();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value6() {
		return getAuthorDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.types.UInteger value7() {
		return getCommitter();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value8() {
		return getCommitDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Byte value9() {
		return getVerified();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value10() {
		return getVerifiedReason();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.types.UInteger value11() {
		return getAdded();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.types.UInteger value12() {
		return getRemoved();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Byte value13() {
		return getSsGenPositive();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Byte value14() {
		return getSsGenNegative();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Byte value15() {
		return getSsGenNeutral();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DataCommitsRecord value1(org.jooq.types.ULong value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DataCommitsRecord value2(java.lang.String value) {
		setRepo(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DataCommitsRecord value3(java.lang.String value) {
		setSha(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DataCommitsRecord value4(java.lang.String value) {
		setMessage(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DataCommitsRecord value5(org.jooq.types.UInteger value) {
		setAuthor(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DataCommitsRecord value6(java.sql.Timestamp value) {
		setAuthorDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DataCommitsRecord value7(org.jooq.types.UInteger value) {
		setCommitter(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DataCommitsRecord value8(java.sql.Timestamp value) {
		setCommitDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DataCommitsRecord value9(java.lang.Byte value) {
		setVerified(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DataCommitsRecord value10(java.lang.String value) {
		setVerifiedReason(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DataCommitsRecord value11(org.jooq.types.UInteger value) {
		setAdded(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DataCommitsRecord value12(org.jooq.types.UInteger value) {
		setRemoved(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DataCommitsRecord value13(java.lang.Byte value) {
		setSsGenPositive(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DataCommitsRecord value14(java.lang.Byte value) {
		setSsGenNegative(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DataCommitsRecord value15(java.lang.Byte value) {
		setSsGenNeutral(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DataCommitsRecord values(org.jooq.types.ULong value1, java.lang.String value2, java.lang.String value3, java.lang.String value4, org.jooq.types.UInteger value5, java.sql.Timestamp value6, org.jooq.types.UInteger value7, java.sql.Timestamp value8, java.lang.Byte value9, java.lang.String value10, org.jooq.types.UInteger value11, org.jooq.types.UInteger value12, java.lang.Byte value13, java.lang.Byte value14, java.lang.Byte value15) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached DataCommitsRecord
	 */
	public DataCommitsRecord() {
		super(edu.ysu.msr17.commitloader.data.tables.DataCommits.DATA_COMMITS);
	}

	/**
	 * Create a detached, initialised DataCommitsRecord
	 */
	public DataCommitsRecord(org.jooq.types.ULong id, java.lang.String repo, java.lang.String sha, java.lang.String message, org.jooq.types.UInteger author, java.sql.Timestamp authorDate, org.jooq.types.UInteger committer, java.sql.Timestamp commitDate, java.lang.Byte verified, java.lang.String verifiedReason, org.jooq.types.UInteger added, org.jooq.types.UInteger removed, java.lang.Byte ssGenPositive, java.lang.Byte ssGenNegative, java.lang.Byte ssGenNeutral) {
		super(edu.ysu.msr17.commitloader.data.tables.DataCommits.DATA_COMMITS);

		setValue(0, id);
		setValue(1, repo);
		setValue(2, sha);
		setValue(3, message);
		setValue(4, author);
		setValue(5, authorDate);
		setValue(6, committer);
		setValue(7, commitDate);
		setValue(8, verified);
		setValue(9, verifiedReason);
		setValue(10, added);
		setValue(11, removed);
		setValue(12, ssGenPositive);
		setValue(13, ssGenNegative);
		setValue(14, ssGenNeutral);
	}
}
