/**
 * This class is generated by jOOQ
 */
package edu.ysu.msr17.commitloader.data.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.4" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DataUsers extends org.jooq.impl.TableImpl<edu.ysu.msr17.commitloader.data.tables.records.DataUsersRecord> {

	private static final long serialVersionUID = -1735576044;

	/**
	 * The singleton instance of <code>travistorrent.data_users</code>
	 */
	public static final edu.ysu.msr17.commitloader.data.tables.DataUsers DATA_USERS = new edu.ysu.msr17.commitloader.data.tables.DataUsers();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<edu.ysu.msr17.commitloader.data.tables.records.DataUsersRecord> getRecordType() {
		return edu.ysu.msr17.commitloader.data.tables.records.DataUsersRecord.class;
	}

	/**
	 * The column <code>travistorrent.data_users.id</code>.
	 */
	public final org.jooq.TableField<edu.ysu.msr17.commitloader.data.tables.records.DataUsersRecord, org.jooq.types.UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

	/**
	 * The column <code>travistorrent.data_users.name</code>.
	 */
	public final org.jooq.TableField<edu.ysu.msr17.commitloader.data.tables.records.DataUsersRecord, java.lang.String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>travistorrent.data_users.email</code>.
	 */
	public final org.jooq.TableField<edu.ysu.msr17.commitloader.data.tables.records.DataUsersRecord, java.lang.String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>travistorrent.data_users.gh_id</code>.
	 */
	public final org.jooq.TableField<edu.ysu.msr17.commitloader.data.tables.records.DataUsersRecord, org.jooq.types.UInteger> GH_ID = createField("gh_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "");

	/**
	 * Create a <code>travistorrent.data_users</code> table reference
	 */
	public DataUsers() {
		this("data_users", null);
	}

	/**
	 * Create an aliased <code>travistorrent.data_users</code> table reference
	 */
	public DataUsers(java.lang.String alias) {
		this(alias, edu.ysu.msr17.commitloader.data.tables.DataUsers.DATA_USERS);
	}

	private DataUsers(java.lang.String alias, org.jooq.Table<edu.ysu.msr17.commitloader.data.tables.records.DataUsersRecord> aliased) {
		this(alias, aliased, null);
	}

	private DataUsers(java.lang.String alias, org.jooq.Table<edu.ysu.msr17.commitloader.data.tables.records.DataUsersRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, edu.ysu.msr17.commitloader.data.Travistorrent.TRAVISTORRENT, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<edu.ysu.msr17.commitloader.data.tables.records.DataUsersRecord, org.jooq.types.UInteger> getIdentity() {
		return edu.ysu.msr17.commitloader.data.Keys.IDENTITY_DATA_USERS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<edu.ysu.msr17.commitloader.data.tables.records.DataUsersRecord> getPrimaryKey() {
		return edu.ysu.msr17.commitloader.data.Keys.KEY_DATA_USERS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<edu.ysu.msr17.commitloader.data.tables.records.DataUsersRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<edu.ysu.msr17.commitloader.data.tables.records.DataUsersRecord>>asList(edu.ysu.msr17.commitloader.data.Keys.KEY_DATA_USERS_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public edu.ysu.msr17.commitloader.data.tables.DataUsers as(java.lang.String alias) {
		return new edu.ysu.msr17.commitloader.data.tables.DataUsers(alias, this);
	}

	/**
	 * Rename this table
	 */
	public edu.ysu.msr17.commitloader.data.tables.DataUsers rename(java.lang.String name) {
		return new edu.ysu.msr17.commitloader.data.tables.DataUsers(name, null);
	}
}
